#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include "zmk-helpers/helper.h"

// Source keypos definitions

#include "zmk-helpers/key-labels/42.h"
#include "includes/behaviours_homerow_mods.dtsi"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4
#define KEYS_T LH2 LH1 LH0 RH0 RH1 RH2

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

&mt {
    quick-tap-ms = <20>;
    flavor = "balanced";
};

&lt { quick-tap-ms = <50>; };

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <23 24>;
        };

        to_ableton {
            bindings = <&to 1>;
            key-positions = <44 45>;
            layers = <4 0 2 3>;
        };

        to_home {
            bindings = <&to 0>;
            key-positions = <44 45>;
            layers = <1>;
        };

        ableton_shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <28 0>;
            layers = <1>;
            timeout-ms = <100>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB         &kp Q             &kp W             &kp E                     &kp R          &kp T                              &kp UP                &kp Y        &kp U          &kp I                      &kp O              &kp P                 &kp DEL
&kp LEFT_ALT    &hm_l LEFT_GUI A  &hm_l LEFT_ALT S  &hm_shift_l LEFT_SHIFT D  &hm_l LCTRL F  &kp G                    &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &hm_r RCTRL J  &hm_shift_r RIGHT_SHIFT K  &hm_r RIGHT_ALT L  &hm_r RIGHT_GUI SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z             &kp X             &kp C                     &kp V          &kp B      &kp C_MUTE              &kp DOWN              &kp N        &kp M          &kp COMMA                  &kp DOT            &kp FSLH              &mo 4
                                                    &kp LEFT_CONTROL          &kp BACKSPACE  &lt 2 TAB                                                &lt 3 ENTER  &kp SPACE      &sk RIGHT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        ableton {
            display-name = "ableton";
            bindings = <
&kp TAB           &kp Q             &kp W             &kp E                     &kp R          &kp T                                &kp UP                &kp Y        &kp U          &kp I                      &kp O              &kp P                 &kp DEL
&kp LEFT_ALT      &hm_l LEFT_GUI A  &hm_l LEFT_ALT S  &hm_shift_l LEFT_SHIFT D  &hm_l LCTRL F  &kp G                      &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &hm_r RCTRL J  &hm_shift_r RIGHT_SHIFT K  &hm_r RIGHT_ALT L  &hm_r RIGHT_GUI SEMI  &kp SQT
&kp LEFT_CONTROL  &kp Z             &kp X             &kp C                     &kp V          &kp B        &kp C_MUTE              &kp DOWN              &kp N        &kp M          &kp COMMA                  &kp DOT            &kp FSLH              &mo 4
                                                      &sk LEFT_CONTROL          &kp BACKSPACE  &lt 2 SPACE                                                &lt 3 ENTER  &kp SPACE      &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp EXCLAMATION   &kp AT_SIGN       &kp POUND         &kp DOLLAR        &kp PERCENT                                   &mmv MOVE_UP                     &kp CARET        &kp AMPERSAND      &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSPACE
&trans  &kp NUMBER_1      &kp NUMBER_2      &kp NUMBER_3      &kp NUMBER_4      &kp N5                        &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp NUMBER_6     &kp N7             &kp N8        &kp N9                &kp N0                 &kp MINUS
&trans  &kp LC(NUMBER_1)  &kp LC(NUMBER_2)  &kp LC(NUMBER_3)  &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &trans        &trans                &trans                 &trans
                                            &trans            &kp ENTER         &trans                                                                         &kp BACKSPACE    &kp SPACE          &kp COLON
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            bindings = <
&trans  &trans    &kp GRAVE  &kp TILDE   &kp BACKSLASH  &kp PIPE                         &trans          &kp MINUS         &kp UNDERSCORE      &kp EQUAL     &kp PLUS           &trans             &trans
&trans  &kp HOME  &kp END    &trans      &kp PG_UP      &kp PG_DN                &trans  &trans  &trans  &kp LEFT          &kp DOWN            &kp UP        &kp RIGHT          &trans             &trans
&trans  &trans    &trans     &kp K_COPY  &kp K_PASTE    &trans     &kp C_MUTE            &trans          &kp C_PLAY_PAUSE  &kp C_FAST_FORWARD  &kp C_REWIND  &kp C_VOLUME_DOWN  &kp C_VOLUME_DOWN  &trans
                             &kp ESC     &trans         &trans                                           &trans            &trans              &trans
            >;

            label = "SYMBOL";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        function {
            display-name = "FUNCTION";
            bindings = <
&studio_unlock  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                                        &mmv MOVE_UP                     &kp F6         &kp F7           &kp F8       &kp F9      &kp F10  &kp F11
&trans          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR_ALL                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans         &kp PRINTSCREEN  &trans       &trans      &trans   &kp F12
&trans          &kp CAPSLOCK  &trans        &trans        &trans        &trans          &kp C_MUTE                    &mmv MOVE_DOWN                   &trans         &trans           &bootloader  &sys_reset  &trans   &trans
                                            &trans        &trans        &trans                                                                         &kp BACKSPACE  &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
